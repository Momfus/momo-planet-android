<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_prueba</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicio atributos prueba
g_prueba = false;

//Para el manejo de ventanas y adaptable
prueba_tamanio_ventana = 0;
prueba_tamanio_cantidad = 4; //Contando desde cero

prueba_key_aumentar = false;
prueba_key_disminuir = false;


prueba_ventana_ancho = 504;
prueba_ventana_alto = 896;


sc_cambiar_tamanio();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Centrar ventana en PC

window_center();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Aumentar o disminiuir ventana


prueba_key_aumentar = keyboard_check_released(ord("S"));
prueba_key_disminuir = keyboard_check_released(ord("A"));

if( prueba_key_aumentar xor prueba_key_disminuir ){

    if( prueba_key_aumentar == true ){
    
        if( prueba_tamanio_ventana &lt; prueba_tamanio_cantidad ){ prueba_tamanio_ventana++; }
        else{ prueba_tamanio_ventana = 0; }
    
    }
    else{
    
        if( prueba_tamanio_ventana &gt; 0 ){ prueba_tamanio_ventana--; }
        else{ prueba_tamanio_ventana = prueba_tamanio_cantidad; }
    
    }

    //Cambiar tamaño ventana
    sc_cambiar_valores_ventana(prueba_tamanio_ventana);
    sc_cambiar_tamanio();

    
    
    
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Elementos prueba de GUI a dibujar
if( g_prueba  == true ){

    ///INFORMACIÓN DEL GUI
    draw_set_colour(c_white);
    draw_text( g_gui_x + g_gui_ancho - 250, g_gui_y + 10, "Tamanio ventana: " + string(prueba_tamanio_ventana ) +"#"+ 
                        sc_draw_display_info(display.screen)+"#"+
                        sc_draw_display_info(display.window)+"#"+
                        sc_draw_display_info(display.app_surface)+"#"+
                        sc_draw_display_info(display.view)+"#"+
                        sc_draw_display_info(display.gui) + "#" +
                        "GUI_x = " + string( g_gui_x ) + "; GUI_y = " + string(g_gui_y) + "#"   +
                        "GUI ancho = " + string(g_gui_ancho) + "; GUI alto = " + string(g_gui_alto) +
                        "#Room = " + string(room_get_name(room))
                        
    );
    
    
    
}


///Información que siempre esta

//Dibujar borde de pantalla
/*
draw_set_colour( c_orange );
draw_rectangle( g_gui_x, g_gui_y, g_gui_x + g_gui_ancho - 1, g_gui_y + g_gui_alto - 1, true );


draw_set_colour(c_white);
draw_set_font(fn_prueba)
draw_set_halign(fa_left);
draw_set_valign(fa_top);

draw_text(g_gui_x +  50, g_gui_y + g_gui_alto - 100, "room_speed = " + string(room_speed) + "#real fps = " + string(fps_real) + "#fps = " + string(fps) );

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Datos extra
if( g_prueba == true ){

    draw_set_colour(c_white);
    draw_set_font(fn_prueba)
    
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    
    jug = ob_jugador;
    //Datos del jugador
    with(ob_jugador){
    
        var prueba = instance_place( x, y + vel_vertical + 4, parent_solido );
        if( prueba != noone ){
        
            prueba = object_get_name( prueba.object_index );
        
        }
        else{
        
            prueba = "nada"
        
        }
    
        draw_text( view_xview[0] + g_gui_x + 10, view_yview[0] + g_gui_y + 10, 
                            "&lt;Jugador&gt;#" + 
                            "X0 = " + string(xstart) + 
                            "; YO = " + string(ystart) + 
                            "# X = " + string(x) + "; Y = " + string(y) +
                            "#Vel V. = " + string(vel_vertical) +
                            "#Suelo = " + string(sobre_suelo) +
                            "#Obj Col. = " + string( prueba  ) + 
                            "#Moneda Cantidad = " + string(g_moneda_cantidad)  +
                            "#Nivel Timeline = " + string( timeline_get_name( control_generador.timeline_index ) ) +
                            "#Otro = " + string(g_moneda_cantidad )
                            
                
        );
        
        
    
    }
   
    
    //Datos de la plataformas
    with(ob_obstaculo_pared){
    
        draw_set_colour(c_maroon);
        draw_text(x, y, "ip: " + string(mi_ind_pos) + "- ang: " + string(mi_planeta_ang) + " - sp: " + string(sprite_index) + " #x: " + string(x) )
        
        //Linea de límite a saltar
        /*
        draw_set_colour(c_green);
        draw_line(0, mi_y_arriba, room_width, mi_y_arriba);
        */
    
    
    }
    
    //Datos de la plataformas
    with(ob_obstaculo_pinche){
    
        draw_set_colour(c_maroon);
         draw_text(x, y, "ip: " + string(mi_ind_pos) + "- ang: " + string(mi_planeta_ang) + " - sp: " + string(sprite_index) + " #x: " + string(x) )
        
        
    
    
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="85">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Aumentar monedas

if( room != rm_juego_principal ){

    g_moneda_cantidad = get_integer("Cantidad Monedas", 0);
    playerprefs_set("moneda_cantidad", g_moneda_cantidad);
    playerprefs_save();

}
else{

    g_moneda_cantidad++;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="84">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cambiar velocidad juego

if( room_speed != 1 ){ 

    room_speed = 1; 
    tween_system_set_speed( 1/30 );
    
}
else{ 

    room_speed = 30; 
    tween_system_set_speed(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reiniciar juego

game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="80">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mostrar u ocultar info de prueba
if( g_prueba == true ){ g_prueba = false; }
else{ g_prueba = true; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="79">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Aumentar puntaje
sc_puntaje_cambiar(1, true, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Jugador muere

with(ob_jugador){ 

    if( mi_estado != estado_jugador_muerto ){

        sc_jugador_morir(false); 
        
    }
    
}
/*
with(control_nivel){
    
    sc_nivel_explota();

}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Crear instancias a testear
sc_mostrar_mensaje(g_room_mitad_x, g_room_mitad_y, "Hola", false);

/*
if not( instance_exists(control_pausa) ){ instance_create(0, 0,control_pausa) }
else{ instance_destroy_other(control_pausa ); }
/*
with(ob_planeta){

    instance_create_elipseTween_center(x, y, 550, 550, c_gray, ease_cubicout, 1, 1, false, 0, depth - 1);
    instance_create_elipseTween_center(x, y, 400, 400, c_white, ease_cubicout, 1, 1, false, 0, depth - 2);
    instance_create_elipseTween_center(x, y, 300, 300, c_black, ease_cubicout, 1, 1, false, 0, depth - 3);
    
    instance_create_elipseTween_center(x, y, 400, 400, c_black, ease_cubicout, 1, 1, false, 0.4, depth - 4);
}
*/
/*
if( room_exists(room_next(room)) ){

    sc_transicion_fadeoutin_color(g_view_x, g_view_y, rm_juego_principal, c_white);  

}
else{

    game_restart();    

}

/*
if( instance_exists(ob_logo_momoplanet) ){
    instance_destroy_other(ob_logo_momoplanet);
    instance_create(g_pta_x, g_pta_y, ob_logo_momoplanet)
    
}

*/





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reiniciar room
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Borra todo los saves
playerprefs_delete_all();
playerprefs_save();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Salir del juego

game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
