<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_planeta_normal</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>parent_solido</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Atributos del objeto

planeta_angulo = 0; // Usado para ir girando el sprite que se dibuja en draw (no se utiliza image_angle ya que afecta a la máscara de colisión)
planeta_vel_rotacion = 2; //Gira en sentido opuesto a las manecillas del reloj (en sentido contrario al ser negativo)

planeta_vel_dir_anterior = sign(planeta_vel_rotacion); //Usado para reconocer cuando cambia de dirección

mi_estado = estado_planeta_moverse;
mi_estado_draw = estado_planeta_draw_sin_shader;

//Manejo del sprite
image_index = 0;
image_speed = 0;

//Puntaje actual a mostrar(se maneja desde un objeto el numero que se muestra para efectos)
instance_create(x,y,ob_hud_puntaje_actual);

//Manejo de los shaders
mi_tween_shader = undefined;
mi_shader = undefined;

    //Manejo del cìrculo que aborbe el color
    uniform_posicion = shader_get_uniform(sh_circulo_color_absorber_borde,"Posicion");
    uniform_radio = shader_get_uniform(sh_circulo_color_absorber_borde,"Radio");
    
    mi_shader_radio_actual = 0;
    
    //Manejo del aumento de brillo
    uniform_mul_brillo = shader_get_uniform(sh_aumento_brillo_escala_gris, "BrilloMultiplicador");
    
    mi_shader_mul_brillo = 1.0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Comenzar brillo de explosión de fono
sc_explosion_lineas(g_pta_x, g_pta_y, 5, g_view_ancho, g_view_alto, 7 + irandom(3), 30 + irandom(25), c_white, 2, true );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ejecución del estado del planeta
script_execute(mi_estado);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///El planeta explota y lo maneja control_nivel


sc_sonido_planeta_estalla();

event_perform_object(control_nivel, ev_other,ev_user0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Iniciar aumento de brillo para explotar

sc_sonido_planeta_brillo();

//Cambios de shader
mi_shader = sh_aumento_brillo_escala_gris;
mi_estado_draw = estado_planeta_draw_con_shader_brillo_multiplicador;

var temp_tiempo_aumentar_brillo = (abs(360/g_pta_vel) / room_speed );

mi_tween_shader = tween_to(self, temp_tiempo_aumentar_brillo, array("mi_shader_mul_brillo", 3.0, "ease", ease_sineout, "oncomplete", "user1") );

//Efecto de empezar a explotar que sucede unos segundos antes que termine el brillo
alarm[0] = (temp_tiempo_aumentar_brillo - 5) * room_speed;

//Comenzar a temblar la pantalla un poco antes de explotar todo
temp_tiempo_aumentar_brillo = ( temp_tiempo_aumentar_brillo - 1.5 ) * 30; //Dos segundos antes de explotar

with(control_nivel){ alarm[2] = temp_tiempo_aumentar_brillo; }

//Efecto visual para señalar que queda poco para explotar
instance_create_elipseTween_center(x, y, 550, 550, c_gray, ease_cubicout, 1, 1, false, 0, depth - 1);
instance_create_elipseTween_center(x, y, 400, 400, c_white, ease_cubicout, 1, 1, false, 0, depth - 2);
instance_create_elipseTween_center(x, y, 300, 300, c_black, ease_cubicout, 1, 1, false, 0, depth - 3);

instance_create_elipseTween_center(x, y, 400, 400, c_black, ease_cubicout, 1, 1, false, 0.2, depth - 4);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dibujar animación planeta
script_execute(mi_estado_draw);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
